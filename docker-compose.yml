version: '3.1'

services:

  #############################
  # API Gateway Reverse Proxy #
  #############################
  nginx-reverse-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: Reverse-Proxy
    restart: always
    ports:
        - '80:80'
    volumes:
        - vhostd:/etc/nginx/vhost.d
        - html:/usr/share/nginx/html
        - /var/run/docker.sock:/tmp/docker.sock:ro


  ###################
  # MySQL Container #
  ###################
  mysql:
    image: mysql:8
    container_name: MySQL-Container
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
      MYSQL_DATABASE: sales
      MYSQL_USER: Adminbd
      MYSQL_PASSWORD: Passwordbd
      VIRTUAL_HOST: mysql.ti.net
    volumes:
      # Dump files for initiating tables
      - ./data/:/docker-entrypoint-initdb.d/
    logging:
        driver: "json-file"
        options:
            max-size: "10k"
            max-file: "10"


  ###########################
  # ElasticSearch Container #
  ###########################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: ElasticSearch-Container
    restart: always
    expose:
      - 9200
      - 9300
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      # - discovery.seed_hosts=elasticsearch
      # - cluster.initial_master_nodes=elasticsearch
      # - cluster.name=sdes-bi-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data


  ####################
  # Logstach Container #
  ####################
  logstash:
    build:
      context: .
      dockerfile: Dockerfile-logstash
    container_name: Logstash-Container
    restart: always
    depends_on:
      - mysql
      - elasticsearch
    volumes:
      - ./volumes/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./volumes/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./volumes/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./volumes/logstash/config/queries/:/usr/share/logstash/config/queries/
    logging:
      driver: "json-file"
      options:
        max-size: "10k"
        max-file: "10"


  ####################
  # Kibana Container #
  ####################
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: Kibana-Container
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - VIRTUAL_HOST=kibana.ti.net
    #ports:
    #  - 5601:5601
    depends_on:
      - elasticsearch


volumes:
    html:
    vhostd:
    netdata-etc:
